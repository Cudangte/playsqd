AudioTrackEntity.findRandomTrackByGenre = SELECT * FROM AUDIO_TRACK l WHERE UPPER(l.ALBUM_GENRE) LIKE CONCAT('%', UPPER(:genre), '%') ORDER BY RAND() LIMIT 1
#AudioTrackEntity.findAlbumTrackLocation = SELECT l.FILE_LOCATION FROM AUDIO_TRACK l WHERE l.ALBUM_ID=:albumId LIMIT 1

AudioTrackEntity.findRandomGenreTrackNotYetPlayedByChannelId = SELECT * FROM AUDIO_TRACK t WHERE t.ALBUM_GENRE IN (:genres) AND NOT EXISTS(SELECT 1 FROM AUDIO_CHANNEL_PLAYED_TRACK h WHERE h.AUDIO_CHANNEL_ID =:channelId AND h.AUDIO_TRACK_ID = t.ID) ORDER BY RAND() LIMIT 1

AudioTrackEntity.findAllGenres = SELECT a.ALBUM_GENRE as genre FROM AUDIO_TRACK a GROUP BY genre ORDER BY genre ASC
AudioTrackEntity.countByGenreIn = SELECT COUNT(t.ID) as count, SUM(t.TRACK_LENGTH) as lengthinseconds FROM AUDIO_TRACK t WHERE t.ALBUM_GENRE IN (:genres)

AudioTrackEntity.artistsCount = SELECT COUNT(DISTINCT l.ARTIST_ID) FROM AUDIO_TRACK l
AudioTrackEntity.artistsLikeCount = SELECT COUNT(DISTINCT l.ARTIST_ID) FROM AUDIO_TRACK l WHERE UPPER(l.ARTIST_NAME) LIKE CONCAT('%', UPPER(:artistNameLike), '%')
AudioTrackEntity.pageableArtists = SELECT l.ARTIST_ID as id, l.ARTIST_NAME as name, COUNT(DISTINCT l.ALBUM_ID) as albumscount, COUNT(l.ID) as trackcount FROM AUDIO_TRACK l GROUP BY l.ARTIST_ID, l.ARTIST_NAME LIMIT :pageSize OFFSET :offset
AudioTrackEntity.pageableArtistsLike = SELECT l.ARTIST_ID as id, l.ARTIST_NAME as name, COUNT(DISTINCT l.ALBUM_ID) as albumscount, COUNT(l.ID) as trackcount FROM AUDIO_TRACK l WHERE UPPER(l.ARTIST_NAME) LIKE CONCAT('%', UPPER(:artistNameLike), '%') GROUP BY l.ARTIST_ID, l.ARTIST_NAME LIMIT :pageSize OFFSET :offset

AudioTrackEntity.artistAlbums = SELECT l.ARTIST_ID as artistid, l.ARTIST_NAME as artistname, l.ALBUM_ID as id, l.ALBUM_NAME as name, l.ALBUM_YEAR as year, l.ALBUM_GENRE as genre,  \
  COUNT(l.ID) as trackcount, SUM(l.TRACK_LENGTH) as totaltimeinseconds \
  FROM AUDIO_TRACK l WHERE l.ARTIST_ID=:artistId \
  GROUP BY l.ARTIST_ID, l.ARTIST_NAME, l.ALBUM_ID, l.ALBUM_NAME, l.ALBUM_YEAR, l.ALBUM_GENRE

AudioTrackEntity.pageableAlbumsLike = SELECT l.ARTIST_ID as artistid, l.ARTIST_NAME as artistname, l.ALBUM_ID as id, l.ALBUM_NAME as name, l.ALBUM_YEAR as year, l.ALBUM_GENRE as genre,  \
  COUNT(l.ID) as trackcount, SUM(l.TRACK_LENGTH) as totaltimeinseconds \
  FROM AUDIO_TRACK l \
  WHERE UPPER(l.ALBUM_NAME) LIKE CONCAT('%', UPPER(:albumNameLike), '%') \
  GROUP BY l.ARTIST_ID, l.ARTIST_NAME, l.ALBUM_ID, l.ALBUM_NAME, l.ALBUM_YEAR, l.ALBUM_GENRE \
  LIMIT :pageSize OFFSET :offset

AudioTrackEntity.albumsCount = SELECT COUNT(DISTINCT l.ALBUM_ID) FROM AUDIO_TRACK l
AudioTrackEntity.albumsLikeCount = SELECT COUNT(DISTINCT l.ALBUM_ID) FROM AUDIO_TRACK l WHERE UPPER(l.ALBUM_NAME) LIKE CONCAT('%', UPPER(:albumNameLike), '%')

AudioChannelPlayedTrackEntity.findAudioTracksByChannelId = SELECT l.ID as id, l.TRACK_NAME as name, l.TRACK_LENGTH as lengthinseconds, l.MISC_IS_FAVORITE as favorite, l.ARTIST_ID as artistid, l.ARTIST_NAME as artistname, l.ALBUM_ID as albumid, l.ALBUM_NAME as albumname, h.CREATED_DATE as playbacktimestamp \
  \ FROM AUDIO_TRACK l JOIN AUDIO_CHANNEL_PLAYED_TRACK h ON l.ID = h.AUDIO_TRACK_ID WHERE h.AUDIO_CHANNEL_ID = :channelId ORDER BY playbacktimestamp DESC